/*
 * This file is generated by jOOQ.
 */
package dev.mlnr.spidey.jooq.tables;


import dev.mlnr.spidey.jooq.Keys;
import dev.mlnr.spidey.jooq.Public;
import dev.mlnr.spidey.jooq.tables.records.InviteFilterIgnoredUsersRecord;
import org.jooq.*;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;

import java.util.Arrays;
import java.util.List;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class InviteFilterIgnoredUsers extends TableImpl<InviteFilterIgnoredUsersRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>public.invite_filter_ignored_users</code>
     */
    public static final InviteFilterIgnoredUsers INVITE_FILTER_IGNORED_USERS = new InviteFilterIgnoredUsers();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<InviteFilterIgnoredUsersRecord> getRecordType() {
        return InviteFilterIgnoredUsersRecord.class;
    }

    /**
     * The column <code>public.invite_filter_ignored_users.guild_id</code>.
     */
    public final TableField<InviteFilterIgnoredUsersRecord, Long> GUILD_ID = createField(DSL.name("guild_id"), SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>public.invite_filter_ignored_users.user_id</code>.
     */
    public final TableField<InviteFilterIgnoredUsersRecord, Long> USER_ID = createField(DSL.name("user_id"), SQLDataType.BIGINT.nullable(false), this, "");

    private InviteFilterIgnoredUsers(Name alias, Table<InviteFilterIgnoredUsersRecord> aliased) {
        this(alias, aliased, null);
    }

    private InviteFilterIgnoredUsers(Name alias, Table<InviteFilterIgnoredUsersRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>public.invite_filter_ignored_users</code> table reference
     */
    public InviteFilterIgnoredUsers(String alias) {
        this(DSL.name(alias), INVITE_FILTER_IGNORED_USERS);
    }

    /**
     * Create an aliased <code>public.invite_filter_ignored_users</code> table reference
     */
    public InviteFilterIgnoredUsers(Name alias) {
        this(alias, INVITE_FILTER_IGNORED_USERS);
    }

    /**
     * Create a <code>public.invite_filter_ignored_users</code> table reference
     */
    public InviteFilterIgnoredUsers() {
        this(DSL.name("invite_filter_ignored_users"), null);
    }

    public <O extends Record> InviteFilterIgnoredUsers(Table<O> child, ForeignKey<O, InviteFilterIgnoredUsersRecord> key) {
        super(child, key, INVITE_FILTER_IGNORED_USERS);
    }

    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    @Override
    public List<ForeignKey<InviteFilterIgnoredUsersRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<InviteFilterIgnoredUsersRecord, ?>>asList(Keys.INVITE_FILTER_IGNORED_USERS__INVITE_FILTER_IGNORED_USERS_GUILD_ID_FKEY);
    }

    private transient Guilds _guilds;

    public Guilds guilds() {
        if (_guilds == null)
            _guilds = new Guilds(this, Keys.INVITE_FILTER_IGNORED_USERS__INVITE_FILTER_IGNORED_USERS_GUILD_ID_FKEY);

        return _guilds;
    }

    @Override
    public InviteFilterIgnoredUsers as(String alias) {
        return new InviteFilterIgnoredUsers(DSL.name(alias), this);
    }

    @Override
    public InviteFilterIgnoredUsers as(Name alias) {
        return new InviteFilterIgnoredUsers(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public InviteFilterIgnoredUsers rename(String name) {
        return new InviteFilterIgnoredUsers(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public InviteFilterIgnoredUsers rename(Name name) {
        return new InviteFilterIgnoredUsers(name, null);
    }

    // -------------------------------------------------------------------------
    // Row2 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row2<Long, Long> fieldsRow() {
        return (Row2) super.fieldsRow();
    }
}
